FORMAT: 1A
HOST: https://api.previo.info/app

# Owner API
API for connecting Previo PMS with owner system. Allowing download list of reservation for
commission calculation, getting the list of owners and push the owner reservations.

## Authentication
This API uses Custom Header for its authentication.

The parameters that are needed to be sent for this type of authentication are as follows:
+ `Authorization`

## Authentication [/authentication]

### Get access and refresh token [GET /authentication/access-token]
+ Request (application/json)
    + Headers

            X-Previo-Hotel-Id: 730111
            X-Previo-App-ID: 4 (Application id. X-Previo-App-ID for Owner system is 4.)
            Authorization: (Authorization by access token)
            
+ Response 200 (application/json)

        Authentication token

    + Attributes (array[Authentication])


+ Response 500 (application/json)

        Error occured

    + Attributes (Error)



### Restore token expiration [GET /authentication/refresh-token{?refreshToken}]
+ Request (application/json)
    + Headers

            X-Previo-Hotel-Id: 730111 (Hotel ID in PMS)
            X-Previo-App-ID: 4 (Application id. X-Previo-App-ID for Owner system is 4.)
            Authorization: (Authorization by access token)
            
+ Response 200 (application/json)

        Token has been restored

    + Attributes (array[SuccessfulRequest])



+ Response 400 (application/json)

        Refresh token does not exist

    + Attributes (Error)



+ Response 500 (application/json)

        Error occured

    + Attributes (Error)

### Check access token validity [GET /authentication/is-token-valid{?administrator}]
+ Request (application/json)
    + Headers

            X-Previo-Hotel-Id: 730111 (Hotel ID in PMS)
            X-Previo-App-ID: 4 (Application id. X-Previo-App-ID for Owner system is 4.)
            Authorization: (Authorization by access token)

+ Parameters
    + administrator (boolean, optional)

        Boolean parameter. Value true check if is valid administrator access token. Value false check if is valid owner access token


+ Response 200 (application/json)

        Token is valid

    + Attributes (array[SuccessfulRequest])



+ Response 400 (application/json)

        Authentication token does not exist

    + Attributes (Error)



+ Response 401 (application/json)

        Authentication token expired

    + Attributes (Error)



+ Response 500 (application/json)

        Error occured

    + Attributes (Error)


## Owners [/owner]

### Get List of owners [GET /owner/owners]

+ Request (application/json)
    + Headers

            X-Previo-Hotel-Id: 730111 (Hotel ID in PMS)
            X-Previo-App-ID: 4 (Application id. X-Previo-App-ID for Owner system is 4.)
            Authorization: (Authorization by access token)
            
+ Response 200 (application/json)

        List of owners

    + Attributes (array[Owner])



+ Response 400 (application/json)

        Authentication token does not exist

    + Attributes (Error)



+ Response 401 (application/json)

        Authentication token expired

    + Attributes (Error)



+ Response 500 (application/json)

        Error occured

    + Attributes (Error)


### Get Owner by id [GET /owner/owner{?ownerId}]

+ Request (application/json)
    + Headers

            X-Previo-Hotel-Id: 730111 (Hotel ID in PMS)
            X-Previo-App-ID: 4 (Application id. X-Previo-App-ID for Owner system is 4.)
            Authorization: (Authorization by access token)
            
+ Parameters
    + ownerId (number, required)

        Owner id


+ Response 200 (application/json)

        Owner

    + Attributes (array[Owner])



+ Response 400 (application/json)

        Authentication token does not exist

    + Attributes (Error)



+ Response 401 (application/json)

        Authentication token expired

    + Attributes (Error)



+ Response 500 (application/json)

        Error occured

    + Attributes (Error)

### Get owner categories [GET /owner/owner-categories]

+ Request (application/json)
    + Headers

            X-Previo-Hotel-Id: 730111 (Hotel ID in PMS)
            X-Previo-App-ID: 4 (Application id. X-Previo-App-ID for Owner system is 4.)
            Authorization: (Authorization by access token)

+ Response 200 (application/json)

        List of categories

    + Attributes (array[OwnerCategory])



+ Response 400 (application/json)

        Authentication token does not exist

    + Attributes (Error)



+ Response 401 (application/json)

        Authentication token expired

    + Attributes (Error)



+ Response 500 (application/json)

        Error occured

    + Attributes (Error)


## Partner [/partner/hotel-partners]

### Get list of partners [GET]
+ Request (application/json)
    + Headers

            X-Previo-Hotel-Id: 730111 (Hotel ID in PMS)
            X-Previo-App-ID: 4 (Application id. X-Previo-App-ID for Owner system is 4.)
            Authorization: (Authorization by access token)

+ Response 200 (application/json)

        List of partners

    + Attributes (HotelPartner)



+ Response 400 (application/json)

        Authentication token does not exist

    + Attributes (Error)



+ Response 401 (application/json)

        Authentication token expired

    + Attributes (Error)



+ Response 500 (application/json)

        Error occured

    + Attributes (Error)


## Reservation [/reservation]

### Get list of reservations [GET /reservation/reservations{?roomId,roomTypeId,from,to}]

+ Request (application/json)
    + Headers

            X-Previo-Hotel-Id: 730111 (Hotel ID in PMS)
            X-Previo-App-ID: 4 (Application id. X-Previo-App-ID for Owner system is 4.)
            Authorization: (Authorization by access token)
            
+ Parameters
    + roomId (number, optional)

        Return only reservations for certain room

    + roomTypeId (number, optional)

        Return only reservations for certain room type ID

    + from (string, required)

        From filter (format 'Y-m-d\TH:i:s\Z')

    + to (string, required)

        To filter (format 'Y-m-d\TH:i:s\Z')


+ Response 200 (application/json)

        List of reservations

    + Attributes (array[Reservation])



+ Response 400 (application/json)

        Authentication token does not exist

    + Attributes (Error)



+ Response 401 (application/json)

        Authentication token expired

    + Attributes (Error)



+ Response 500 (application/json)

        Error occured

    + Attributes (Error)


### Get room occupancy [GET /reservation/is-room-occupied{?roomId,from,to}]

+ Request (application/json)
    + Headers

            X-Previo-Hotel-Id: 730111 (Hotel ID in PMS)
            X-Previo-App-ID: 4 (Application id. X-Previo-App-ID for Owner system is 4.)
            Authorization: (Authorization by access token)
            
+ Parameters
    + roomId (string, required)

        Room Id

    + from (string, required)

        From filter(format 'Y-m-d\TH:i:s\Z')

    + to (string, required)

        To filter(format 'Y-m-d\TH:i:s\Z')


+ Response 200 (application/json)

        The room is free

    + Attributes (array[SuccessfulRequest])



+ Response 400 (application/json)

        Authentication token does not exist

    + Attributes (Error)



+ Response 401 (application/json)

        Authentication token expired

    + Attributes (Error)



+ Response 406 (application/json)

        The room is occupied

    + Attributes (Error)



+ Response 500 (application/json)

        Error occured

    + Attributes (Error)


### Create reservation [POST]

+ Request (application/json)
    + Headers

            X-Previo-Hotel-Id: 730111 (Hotel ID in PMS)
            X-Previo-App-ID: 4 (Application id. X-Previo-App-ID for Owner system is 4.)
            Authorization: (Authorization by access token)
            

    + Attributes (CreateReservation)



+ Response 200 (application/json)

        The room is free

    + Attributes (array[SuccessfulRequest])



+ Response 400 (application/json)

        Authentication token does not exist

    + Attributes (Error)



+ Response 401 (application/json)

        Authentication token expired

    + Attributes (Error)



+ Response 406 (application/json)

        The room is occupied

    + Attributes (Error)



+ Response 500 (application/json)

        Error occured

    + Attributes (Error)

### Update reservation [PUT]

+ Request (application/json)
    + Headers

            X-Previo-Hotel-Id: 730111 (Hotel ID in PMS)
            X-Previo-App-ID: 4 (Application id. X-Previo-App-ID for Owner system is 4.)
            Authorization: (Authorization by access token)
    
    + Parameters
        + reservationId (number, required)
        + commissionId (number, required)

    + Attributes (CreateReservation)



+ Response 200 (application/json)

        The room is free

    + Attributes (array[SuccessfulRequest])



+ Response 400 (application/json)

        Authentication token does not exist

    + Attributes (Error)



+ Response 401 (application/json)

        Authentication token expired

    + Attributes (Error)



+ Response 406 (application/json)

        The room is occupied

    + Attributes (Error)



+ Response 500 (application/json)

        Error occured

    + Attributes (Error)

### Delete reservation [DELETE /{?resId}]

+ Request (application/json)
    + Headers

            X-Previo-Hotel-Id: 730111 (Hotel ID in PMS)
            X-Previo-App-ID: 4 (Application id. X-Previo-App-ID for Owner system is 4.)
            Authorization: (Authorization by access token)
            
+ Parameters
    + resId (number, required)

        Reservation id


+ Response 200 (application/json)

        Reservation deleted

    + Attributes (array[SuccessfulRequest])



+ Response 400 (application/json)

        Authentication token does not exist

    + Attributes (Error)



+ Response 406 (application/json)

        The room is occupied

    + Attributes (Error)



+ Response 500 (application/json)

        Error occured

    + Attributes (Error)

## System [/system]

### Get list of currencies [GET /system/currencies]

+ Request (application/json)
    + Headers

            X-Previo-Hotel-Id: 730111 (Hotel ID in PMS)
            Authorization: (Authorization by access token)

+ Response 200 (application/json)

        List of currencies

    + Attributes (array[Currency])



+ Response 400 (application/json)

        Authentication token does not exist

    + Attributes (Error)



+ Response 401 (application/json)

        Authentication token expired

    + Attributes (Error)



+ Response 500 (application/json)

        Error occured

    + Attributes (Error)


### Get list of countries [GET /system/countries]

+ Request (application/json)
    + Headers

            X-Previo-Hotel-Id: 730111 (Hotel ID in PMS)
            Authorization: (Authorization by access token)

+ Response 200 (application/json)

        List of countries

    + Attributes (array[Countries])



+ Response 400 (application/json)

        Authentication token does not exist

    + Attributes (Error)



+ Response 401 (application/json)

        Authentication token expired

    + Attributes (Error)



+ Response 500 (application/json)

        Error occured

    + Attributes (Error)


### Get list of reservation statuses [GET /system/reservation-statuses]

+ Request (application/json)
    + Headers

            X-Previo-Hotel-Id: 730111 (Hotel ID in PMS)
            Authorization: (Authorization by access token)

+ Response 200 (application/json)

        List of reservation statuses

    + Attributes (array[ReservationStatus])



+ Response 400 (application/json)

        Authentication token does not exist

    + Attributes (Error)



+ Response 401 (application/json)

        Authentication token expired

    + Attributes (Error)



+ Response 500 (application/json)

        Error occured

    + Attributes (Error)


### Get list of account item types [GET /system/account-item-types]

+ Request (application/json)
    + Headers

            X-Previo-Hotel-Id: 730111 (Hotel ID in PMS)
            Authorization: (Authorization by access token)

+ Response 200 (application/json)

        List of account item types

    + Attributes (array[AccountItemType])



+ Response 400 (application/json)

        Authentication token does not exist

    + Attributes (Error)



+ Response 401 (application/json)

        Authentication token expired

    + Attributes (Error)



+ Response 500 (application/json)

        Error occured

    + Attributes (Error)





# Data Structures

## Error (object)


### Properties
+ `code` (number, required) 
+ `message` (string, required) 


## AccountItemType (object)


### Properties
+ `id` (number, optional) 
+ `name` (string, optional) 


## AccountItem (object)


### Properties
+ typeId: 1 (number, optional) - cos_id
+ name: accomodation (string, optional) 
+ price: 1000 (number, optional) - Price with VAT per unit
+ quantity: 1 (number, optional) 
+ vatRate: 15 (number, optional)
+ stockId: 256889 (number, optional)
+ packageId: 56565 (number, optional)
+ serviceId: 5656999 (number, optional)
+ currencyId: 1 (number, optional)
+ exchangeRate: 1 (number, optional)


## Authentication (object)


### Properties
+ accessToken: string (string, optional) 
+ tokenType: string (string, optional) 
+ refreshToken: string (string, optional) 


## Company (object)


### Properties
+ partnerId: 2242 (number, optional) - Partner ID
+ partnerName: Previo (string, optional) 
+ previoPartnerId: 244 (number, optional) - Previo partner ID
+ previoPartnerName: Booking (string, optional) 

## Currency (object)


### Properties
+ id: 1 (number, optional) 
+ code: Eur (string, optional) 
+ symbol: € (string, optional) 


## Countries (object)


### Properties
+ id: 1 (number, optional) 
+ name: Czech Republic (string, optional) 


## HotelPartner (object)


### Properties
+ `partners` (Partner, optional) 
+ `previoPartners` (PrevioPartner, optional) 


## Owner (object)


### Properties
+ id: 1 (number, required) 
+ name: Lukas (string, optional) 
+ mail: lukas@previo.cz (string, optional) 
+ phone: 28683464 (string, optional) 
+ countryId: 1 (number, optional) 
+ ico: 28642974 (string, optional) 
+ dic: 29742947 (string, optional) 
+ ident: 28542864 (string, optional) 
+ street: Kolbenova (string, optional) 
+ streetNumber: 801 (string, optional) 
+ city: Prague (string, optional) 
+ zip: 228332 (string, optional) 
+ rooms (array[Room], optional) 


## OwnerCategory (object)


### Properties
+ `id` (number, required) 
+ `name` (string, optional) 


## Partner (object)


### Properties
+ `id` (number, required) 
+ `name` (string, optional) 


## PrevioPartner (object)


### Properties
+ `id` (number, required) 
+ `name` (string, optional) 


## ReservationStatus (object)


### Properties
+ id: 1 (number, optional) 
+ name: Option (string, optional) 


## Reservation (object)


### Properties
+ reservationId: 2497492749 (number, optional) 
+ commissionId: 287642874 (number, optional) 
+ from: 2020-01-25 (string, optional) 
+ to: 2020-01-26 (string, optional) 
+ voucher: 2974294 (string, optional) 
+ guestCount: 2 (number, optional) 
+ statusId: 3 (number, optional) - Status ID in Previo PMS
+ accountItems (array[AccountItem], optional) - []
+ room (Room, optional) 
+ company: Previo (Company, optional) 
+ isLocked: true  (boolean, optional)
+ guestsCountWithoutBed: 2  (number, optional)

## Room (object)


### Properties
+ roomId: 19443 (number, optional) 
+ roomTypeId: 282 (number, optional) 
+ roomName: 101 (string, optional) 
+ roomTypeName: Double (string, optional) 


## CreateReservation (object)


### Properties
+ `roomId`: `618286` (number, optional) 
+ `from`: `2019-06-27T10:59:00Z` (string, optional) 
+ `to`: `2019-06-27T10:59:00Z` (string, optional) 
+ `ownerId`: `691968` (number, optional)
+ stateId: 2 (number, optional)


## SuccessfulRequest (object)


### Properties
+ `code` (number, optional) 
+ `message` (string, optional)